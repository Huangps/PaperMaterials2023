=======================================================
Assertion: BehaviorTree() |= G ( safetycheck0_f-> X ( backup0_r|| backup0_f|| backup0_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck0_f-> X ( backup0_r|| backup0_f|| backup0_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0102301s
Memory Used:8210.064KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck0_f->! X ( backup0_r|| backup0_f|| backup0_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck0_f->! X ( backup0_r|| backup0_f|| backup0_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:49
Total Transitions:111
Time Used:0.0022994s
Memory Used:8517.648KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck1_f-> X ( backup1_r|| backup1_f|| backup1_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck1_f-> X ( backup1_r|| backup1_f|| backup1_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.003047s
Memory Used:8517.136KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck1_f->! X ( backup1_r|| backup1_f|| backup1_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck1_f->! X ( backup1_r|| backup1_f|| backup1_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:53
Total Transitions:120
Time Used:0.0026881s
Memory Used:8508.56KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck2_f-> X ( backup2_r|| backup2_f|| backup2_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck2_f-> X ( backup2_r|| backup2_f|| backup2_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0031658s
Memory Used:8506.4KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck2_f->! X ( backup2_r|| backup2_f|| backup2_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck2_f->! X ( backup2_r|| backup2_f|| backup2_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:57
Total Transitions:129
Time Used:0.0027802s
Memory Used:8505.36KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck3_f-> X ( backup3_r|| backup3_f|| backup3_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck3_f-> X ( backup3_r|| backup3_f|| backup3_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.003251s
Memory Used:8511.392KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck3_f->! X ( backup3_r|| backup3_f|| backup3_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck3_f->! X ( backup3_r|| backup3_f|| backup3_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_s -> safetycheck3_f -> backup3_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:61
Total Transitions:138
Time Used:0.0026756s
Memory Used:8514.4KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck4_f-> X ( backup4_r|| backup4_f|| backup4_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck4_f-> X ( backup4_r|| backup4_f|| backup4_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0029319s
Memory Used:8506.888KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck4_f->! X ( backup4_r|| backup4_f|| backup4_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck4_f->! X ( backup4_r|| backup4_f|| backup4_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_s -> safetycheck3_f -> backup3_s -> safetycheck4_f -> backup4_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:65
Total Transitions:147
Time Used:0.0026463s
Memory Used:8516.696KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck5_f-> X ( backup5_r|| backup5_f|| backup5_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck5_f-> X ( backup5_r|| backup5_f|| backup5_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0032441s
Memory Used:8518.112KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck5_f->! X ( backup5_r|| backup5_f|| backup5_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck5_f->! X ( backup5_r|| backup5_f|| backup5_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_s -> safetycheck3_f -> backup3_s -> safetycheck4_f -> backup4_s -> safetycheck5_f -> backup5_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:69
Total Transitions:156
Time Used:0.0025279s
Memory Used:8514.4KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck6_f-> X ( backup6_r|| backup6_f|| backup6_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck6_f-> X ( backup6_r|| backup6_f|| backup6_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0031371s
Memory Used:8502.984KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck6_f->! X ( backup6_r|| backup6_f|| backup6_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck6_f->! X ( backup6_r|| backup6_f|| backup6_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_s -> safetycheck3_f -> backup3_s -> safetycheck4_f -> backup4_s -> safetycheck5_f -> backup5_s -> safetycheck6_f -> backup6_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:73
Total Transitions:165
Time Used:0.0026177s
Memory Used:8513.888KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck7_f-> X ( backup7_r|| backup7_f|| backup7_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck7_f-> X ( backup7_r|| backup7_f|| backup7_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0031133s
Memory Used:8500.688KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck7_f->! X ( backup7_r|| backup7_f|| backup7_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck7_f->! X ( backup7_r|| backup7_f|| backup7_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_s -> safetycheck0_f -> backup0_s -> safetycheck1_f -> backup1_s -> safetycheck2_f -> backup2_s -> safetycheck3_f -> backup3_s -> safetycheck4_f -> backup4_s -> safetycheck5_f -> backup5_s -> safetycheck6_f -> backup6_s -> safetycheck7_f -> backup7_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:77
Total Transitions:174
Time Used:0.0034721s
Memory Used:8513.496KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck8_f-> X ( backup8_r|| backup8_f|| backup8_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck8_f-> X ( backup8_r|| backup8_f|| backup8_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0033142s
Memory Used:8494.72KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck8_f->! X ( backup8_r|| backup8_f|| backup8_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck8_f->! X ( backup8_r|| backup8_f|| backup8_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:2
Total Transitions:5
Time Used:0.0019863s
Memory Used:8512.176KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck9_f-> X ( backup9_r|| backup9_f|| backup9_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck9_f-> X ( backup9_r|| backup9_f|| backup9_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0030116s
Memory Used:8517.448KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck9_f->! X ( backup9_r|| backup9_f|| backup9_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck9_f->! X ( backup9_r|| backup9_f|| backup9_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:5
Total Transitions:12
Time Used:0.0020632s
Memory Used:8515.632KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck10_f-> X ( backup10_r|| backup10_f|| backup10_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck10_f-> X ( backup10_r|| backup10_f|| backup10_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0035897s
Memory Used:8514.304KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck10_f->! X ( backup10_r|| backup10_f|| backup10_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck10_f->! X ( backup10_r|| backup10_f|| backup10_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:9
Total Transitions:21
Time Used:0.001791s
Memory Used:8516.304KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck11_f-> X ( backup11_r|| backup11_f|| backup11_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck11_f-> X ( backup11_r|| backup11_f|| backup11_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0038004s
Memory Used:8517.448KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck11_f->! X ( backup11_r|| backup11_f|| backup11_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck11_f->! X ( backup11_r|| backup11_f|| backup11_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:13
Total Transitions:30
Time Used:0.001899s
Memory Used:8509.032KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck12_f-> X ( backup12_r|| backup12_f|| backup12_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck12_f-> X ( backup12_r|| backup12_f|| backup12_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.003114s
Memory Used:8506.056KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck12_f->! X ( backup12_r|| backup12_f|| backup12_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck12_f->! X ( backup12_r|| backup12_f|| backup12_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:17
Total Transitions:39
Time Used:0.0022415s
Memory Used:8514.552KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck13_f-> X ( backup13_r|| backup13_f|| backup13_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck13_f-> X ( backup13_r|| backup13_f|| backup13_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.003238s
Memory Used:8498.584KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck13_f->! X ( backup13_r|| backup13_f|| backup13_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck13_f->! X ( backup13_r|| backup13_f|| backup13_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:21
Total Transitions:48
Time Used:0.0022195s
Memory Used:8515.336KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck14_f-> X ( backup14_r|| backup14_f|| backup14_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck14_f-> X ( backup14_r|| backup14_f|| backup14_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0033681s
Memory Used:8531.008KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck14_f->! X ( backup14_r|| backup14_f|| backup14_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck14_f->! X ( backup14_r|| backup14_f|| backup14_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:25
Total Transitions:57
Time Used:0.0026092s
Memory Used:8493.448KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck15_f-> X ( backup15_r|| backup15_f|| backup15_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck15_f-> X ( backup15_r|| backup15_f|| backup15_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0031041s
Memory Used:8517.256KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck15_f->! X ( backup15_r|| backup15_f|| backup15_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck15_f->! X ( backup15_r|| backup15_f|| backup15_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:29
Total Transitions:66
Time Used:0.0025084s
Memory Used:8499.424KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck16_f-> X ( backup16_r|| backup16_f|| backup16_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck16_f-> X ( backup16_r|| backup16_f|| backup16_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0032369s
Memory Used:8517.448KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck16_f->! X ( backup16_r|| backup16_f|| backup16_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck16_f->! X ( backup16_r|| backup16_f|| backup16_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:33
Total Transitions:75
Time Used:0.002258s
Memory Used:8495.248KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck17_f-> X ( backup17_r|| backup17_f|| backup17_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck17_f-> X ( backup17_r|| backup17_f|| backup17_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0032655s
Memory Used:8507.656KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck17_f->! X ( backup17_r|| backup17_f|| backup17_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck17_f->! X ( backup17_r|| backup17_f|| backup17_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:37
Total Transitions:84
Time Used:0.0026035s
Memory Used:8507.632KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck18_f-> X ( backup18_r|| backup18_f|| backup18_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck18_f-> X ( backup18_r|| backup18_f|| backup18_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0038631s
Memory Used:8507.872KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck18_f->! X ( backup18_r|| backup18_f|| backup18_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck18_f->! X ( backup18_r|| backup18_f|| backup18_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:41
Total Transitions:93
Time Used:0.0023986s
Memory Used:8509.416KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck19_f-> X ( backup19_r|| backup19_f|| backup19_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck19_f-> X ( backup19_r|| backup19_f|| backup19_s))) is VALID.

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:101
Total Transitions:222
Time Used:0.0034454s
Memory Used:8518.112KB
=======================================================
Assertion: BehaviorTree() |= G ( safetycheck19_f->! X ( backup19_r|| backup19_f|| backup19_s))
********Verification Result********
The Assertion (BehaviorTree() |= G ( safetycheck19_f->! X ( backup19_r|| backup19_f|| backup19_s))) is NOT valid.
A counterexample is presented as follows.
<init -> safetycheck8_f -> backup8_r -> safetycheck8_s -> safetycheck9_f -> backup9_s -> safetycheck10_f -> backup10_s -> safetycheck11_f -> backup11_s -> safetycheck12_f -> backup12_s -> safetycheck13_f -> backup13_s -> safetycheck14_f -> backup14_s -> safetycheck15_f -> backup15_s -> safetycheck16_f -> backup16_s -> safetycheck17_f -> backup17_s -> safetycheck18_f -> backup18_s -> safetycheck19_f -> backup19_r>

********Verification Setting********
Admissible Behavior: All
Method: Refinement Based Safety Analysis using DFS - The LTL formula is a safety property!
System Abstraction: False


********Verification Statistics********

Visited States:45
Total Transitions:102
Time Used:0.0025384s
Memory Used:8513.312KB
